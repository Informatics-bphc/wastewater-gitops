---
name: Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Verify GitHub Secrets
        run: |
          test -n "${{ secrets.AZURE_CLIENT_ID }}" || (echo "AZURE_CLIENT_ID is missing!" && exit 1)
          test -n "${{ secrets.ACR_PASSWORD }}" || (echo "ACR_PASSWORD is missing!" && exit 1)

      - name: Log in to Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_USERNAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.ACR_USERNAME }}.azurecr.io/wastewater-web:latest -f wastewater_web/Dockerfile wastewater_web
          docker push ${{ secrets.ACR_USERNAME }}.azurecr.io/wastewater-web:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Install Kubectl and Kubelogin
        run: |
          az aks install-cli
          curl -LO https://github.com/Azure/kubelogin/releases/latest/download/kubelogin-linux-amd64.zip
          unzip kubelogin-linux-amd64.zip
          sudo mv bin/linux_amd64/kubelogin /usr/local/bin
          rm -rf kubelogin-linux-amd64.zip bin

      - name: Verify AKS Permissions
        run: |
          az aks show --resource-group DMI-Dev --name bphc-modernization-cluster

      - name: Get AKS Credentials with Azure AD Authentication
        run: |
          az aks get-credentials --resource-group DMI-Dev --name bphc-modernization-cluster --overwrite-existing
          kubelogin convert-kubeconfig -l azurecli

      - name: Restart Deployment
        run: |
          kubectl rollout restart deployment wastewater-web -n default
